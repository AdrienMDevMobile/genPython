# coding: utf-8

"""
    Open Food Facts open-prices REST API

    Open Prices API allows you to add product prices

    The version of the OpenAPI document: 0.0.0 (api)
    Contact: contact@openfoodfacts.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.proof import Proof

class TestProof(unittest.TestCase):
    """Proof unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Proof:
        """Test Proof
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Proof`
        """
        model = Proof()
        if include_optional:
            return Proof(
                id = 56,
                location_id = 56,
                file_path = '',
                mimetype = '',
                type = 'PRICE_TAG',
                image_thumb_path = '',
                location_osm_id = 0,
                location_osm_type = None,
                var_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                currency = None,
                price_count = 0,
                owner = '',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return Proof(
                id = 56,
                location_id = 56,
                type = 'PRICE_TAG',
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testProof(self):
        """Test Proof"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
